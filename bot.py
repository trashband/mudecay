import telebot
from telebot.types import InlineKeyboardMarkup, InlineKeyboardButton

import sqlite3
import func

import time
import parser

from function import answer, char, keyboard, user

bot = telebot.TeleBot("2031549691:AAEh_8atr0C0rpzC7tCMKzHbqd4OtUUnSKc", parse_mode=None) # You can set parse_mode by default. HTML or MARKDOWN


@bot.message_handler(commands=['start', 'help'])
def send_welcome(message):
	answer = "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω—ã–π –±–æ—Ç —Å–µ—Ä–≤–µ—Ä–∞ MuDecay.ru.\n - –û–ø–æ–≤–µ—â–µ–Ω–∏–µ –æ –Ω–∞—á–∞–ª–µ –∫–≤–µ—Å—Ç–æ–≤ (BC, DS, CC...).\n - –í–∫–ª—é—á–µ–Ω–∏–µ –∏ –æ—Ç–∫–ª—é—á–µ–Ω–∏–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π! \n - –ü—Ä–æ–≤–µ—Ä–∫–∞ lvl –ø–µ—Ä—Å–æ–Ω–∞–∂–∞.\n - –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –Ω–æ–≤—ã—Ö —Ç–æ–≤–∞—Ä–∞—Ö –Ω–∞ —Ñ–æ—Ä—É–º–µ (–í –ø—Ä–æ—Ü–µ—Å—Å–µ).\n --------- VIP Bonus -------------\n - –û–ø–æ–≤–µ—à–µ–Ω–∏–µ –ø—Ä–æ –∫–≤–µ—Å—Ç –∑–∞ 5 –º–∏–Ω—É—Ç –¥–æ –Ω–∞—á–∞–ª–∞ –∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø—Ä–æ —Å–ª–µ–¥—É—é—â–∏–π –∫–≤–µ—Å—Ç (–¥–ª—è VIP).\n - –û–ø–æ–≤–µ—â–µ–Ω–∏–µ –æ —Ä–µ–∑–µ—Ç–µ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ (–¥–ª—è VIP)."
	bot.send_photo(message.from_user.id, open('titlebg.jpg', 'rb'), caption = answer,reply_markup=func.markup)
	# bot.reply_to(message, "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω—ã–π –±–æ—Ç —Å–µ—Ä–≤–µ—Ä–∞ MuDecay.ru.\n - –û–ø–æ–≤–µ—â–µ–Ω–∏–µ –æ –Ω–∞—á–∞–ª–µ –∫–≤–µ—Å—Ç–æ–≤ (BC, DS, CC...).\n - –ü—Ä–æ–≤–µ—Ä–∫–∞ lvl –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ (–í –ø—Ä–æ—Ü–µ—Å—Å–µ).\n - –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –Ω–æ–≤—ã—Ö —Ç–æ–≤–∞—Ä–∞—Ö –Ω–∞ —Ñ–æ—Ä—É–º–µ (–í –ø—Ä–æ—Ü–µ—Å—Å–µ).",reply_markup=func.markup)
	user.add_user(message.from_user.id, message.from_user.first_name)
	print (user.user_data(message.from_user.id))

@bot.message_handler(content_types=["text"])
def get_message(message):
	if message.text == '–£—Ä–æ–≤–µ–Ω—å —á–∞—Ä–∞':
		try:
			info = '–ù–∏–∫: ' + str(char.char_name(message.from_user.id)[2]) + '\n' + '–£—Ä–æ–≤–µ–Ω—å: ' + str(char.char_name(message.from_user.id)[4]) + '\n' + '–†–µ–∑–µ—Ç: ' + str(char.char_name(message.from_user.id)[5]) + '\n' +'–ö–ª–∞—Å—Å: ' + str(char.char_name(message.from_user.id)[3] + '\n\n - –ü–æ–¥–¥–µ—Ä–∂–∏ –ø—Ä–æ–µ–∫—Ç. –û—Ñ–æ—Ä–º–∏ VIP-bot –≤—Å–µ–≥–æ –∑–∞ 5 Jewel Decay –∑–∞ –Ω–µ–¥–µ–ª—é! \n ü§ü –ü–∏—à–∏ –≤ –∏–≥—Ä–µ –Ω–∞ –Ω–∏–∫ SmilePanda ü§ü') 
			bot.reply_to(message, info,reply_markup=gen_markup())
		except Exception as e:
			info = '–í—ã –Ω–µ –¥–æ–±–∞–≤–∏–ª–∏ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞!'
			bot.reply_to(message, info,reply_markup=func.settingskey)
	if message.text == '‚ö†Ô∏è –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–æ—Ç–µ':
		answer = "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω—ã–π –±–æ—Ç —Å–µ—Ä–≤–µ—Ä–∞ MuDecay.ru.\n - –û–ø–æ–≤–µ—â–µ–Ω–∏–µ –æ –Ω–∞—á–∞–ª–µ –∫–≤–µ—Å—Ç–æ–≤ (BC, DS, CC...).\n - –í–∫–ª—é—á–µ–Ω–∏–µ –∏ –æ—Ç–∫–ª—é—á–µ–Ω–∏–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π! \n - –ü—Ä–æ–≤–µ—Ä–∫–∞ lvl –ø–µ—Ä—Å–æ–Ω–∞–∂–∞.\n - –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –Ω–æ–≤—ã—Ö —Ç–æ–≤–∞—Ä–∞—Ö –Ω–∞ —Ñ–æ—Ä—É–º–µ (–í –ø—Ä–æ—Ü–µ—Å—Å–µ).\n --------- VIP Bonus -------------\n - –û–ø–æ–≤–µ—à–µ–Ω–∏–µ –ø—Ä–æ –∫–≤–µ—Å—Ç –∑–∞ 5 –º–∏–Ω—É—Ç –¥–æ –Ω–∞—á–∞–ª–∞ –∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø—Ä–æ —Å–ª–µ–¥—É—é—â–∏–π –∫–≤–µ—Å—Ç (–¥–ª—è VIP).\n - –û–ø–æ–≤–µ—â–µ–Ω–∏–µ –æ —Ä–µ–∑–µ—Ç–µ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ (–¥–ª—è VIP)."
		bot.reply_to(message, answer,reply_markup=func.markup)
	if message.text == '–†–∞—Å—Å—ã–ª–∫–∞ On/Off':
			if (user.user_data(message.from_user.id)[0][3] == 1):
				bot.reply_to(message, '–í—ã –æ—Ç–ø–∏—Å–∞–ª–∏—Å—å –æ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π',reply_markup=func.markup)
				user.notics_stat(message.from_user.id, 0)
			else:
				bot.reply_to(message, '–í—ã –ø–æ–¥–ø–∏—Å–∞–ª–∏—Å—å –Ω–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è',reply_markup=func.markup)
				user.notics_stat(message.from_user.id, 1)
	if message.text == '–ù–∞—Å—Ç—Ä–æ–∫–∏':
			bot.reply_to(message, '–ú–µ–Ω—é –Ω–∞—Å—Ç—Ä–æ–µ–∫ üëª',reply_markup=func.settingskey)
	if message.text == '‚ûï –î–æ–±–∞–≤–∏—Ç—å —á–∞—Ä–∞':
			bot.reply_to(message, '–í–≤–µ–¥–∏—Ç–µ –Ω–∏–∫ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ üëª \n- –ë–æ—Ç –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é —Ç–æ–ª—å–∫–æ –æ –ø–µ—Ä–≤–æ–º –¥–æ–±–∞–≤–ª–µ–Ω–Ω–æ–º —á–∞—Ä–µ! –î–ª—è –∫–æ–Ω—Ç—Ä–æ–ª—è –ø–∞—á—å–∫–∏ –∏–∑ 5 –ø–µ—Ä—Å–æ–Ω–∞–∂–µ–π –ø—Ä–∏–æ–±—Ä–µ—Ç–∏—Ç–µ VIP bot',reply_markup=func.settingskey)
			bot.register_next_step_handler(message,add_characters)
	if message.text == 'üò≠ –ù–∞–ø–∏—Å–∞—Ç—å –ê–¥–º–∏–Ω—É':
			bot.reply_to(message, '–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å –æ–±—Ä–∞—â–µ–Ω–∏—è!',reply_markup=func.settingskey)
			bot.register_next_step_handler(message,msg_to_admin)
	if message.text == 'üîô –ù–∞–∑–∞–¥':
			bot.reply_to(message, '–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é',reply_markup=func.markup)

def add_characters(message):
    bot.send_message(message.chat.id,message.text + ' —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω!ü§ü \n –ë–æ—Ç –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é —Ç–æ–ª—å–∫–æ –æ –ø–µ—Ä–≤–æ–º –¥–æ–±–∞–≤–ª–µ–Ω–Ω–æ–º —á–∞—Ä–µ! –î–ª—è –∫–æ–Ω—Ç—Ä–æ–ª—è –ø–∞—á—å–∫–∏ –∏–∑ 5 –ø–µ—Ä—Å–æ–Ω–∞–∂–µ–π –ø—Ä–∏–æ–±—Ä–µ—Ç–∏—Ç–µ VIP bot',reply_markup=func.markup)
    char.add_char1(message.from_user.id, message.text, 'non', 0, 0)
def msg_to_admin(message):
    bot.send_message(message.chat.id,'–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ!',reply_markup=func.markup)
    answer.push_to_base(message.from_user.id, message.text)
def delete_char(message):
    answer = message.text.split(' ')
    char.delete_char(answer[0], message.from_user.id)
    bot.send_message(message.chat.id,'–¢—ã –¥–æ–±—Ä–æ–≤–æ–ª—å–Ω–æ –ª–∏–∫–≤–∏–¥–∏—Ä–æ–≤–∞ –∏–∑ –±–∞–∑—ã –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ ' + answer[1],reply_markup=func.markup)

# Inline Keyboard

def gen_markup():
    markup = InlineKeyboardMarkup()
    markup.row_width = 2
    markup.add(InlineKeyboardButton("–£–¥–∞–ª–µ–Ω–∏–µ –ø–µ—Ä—Å–æ–Ω–∞–∂–µ–π", callback_data="cb_yes"))
    # markup.add(InlineKeyboardButton("–£–¥–∞–ª–∏—Ç—å", callback_data="cb_yes"),
    #                            InlineKeyboardButton("–ò–∑–º–µ–Ω–∏—Ç—å", callback_data="cb_no"))
    return markup

@bot.callback_query_handler(func=lambda call: True)
def callback_query(call):
    if call.data == "cb_yes":
        # bot.answer_callback_query(call.id, "–ú–µ–Ω—é —É–¥–∞–ª–µ–Ω–∏—è –ø–µ—Ä—Å–æ–Ω–∞–∂–∞")
        bot.send_message(call.from_user.id, "–ú–µ–Ω—é —É–¥–∞–ª–µ–Ω–∏—è –ø–µ—Ä—Å–æ–Ω–∞–∂–∞", reply_markup=func.keyboar(call.from_user.id))
        bot.register_next_step_handler(call.message, delete_char)
    elif call.data == "cb_no":
        bot.answer_callback_query(call.id, "–í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç —Ñ—É–Ω–∫—Ü–∏—è –Ω–µ –¥–æ—Å—Ç—É–ø–Ω–∞!")

bot.infinity_polling()